{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/countries/all-countries/all-countries.component.css","webpack:///./src/app/countries/all-countries/all-countries.component.html","webpack:///./src/app/countries/all-countries/all-countries.component.ts","webpack:///./src/app/countries/countries.module.ts","webpack:///./src/app/countries/country/country.component.css","webpack:///./src/app/countries/country/country.component.html","webpack:///./src/app/countries/country/country.component.ts","webpack:///./src/app/regions/allregions/allregions.component.css","webpack:///./src/app/regions/allregions/allregions.component.html","webpack:///./src/app/regions/allregions/allregions.component.ts","webpack:///./src/app/regions/regions.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#content{\\r\\n    display: flex;\\r\\n    position: relative;\\r\\n    flex-direction: column;\\r\\n    height: 10vh;\\r\\n    background:#fff;  \\r\\n  }\\r\\n  /* ---------------------------------------------------\\r\\n      NAVIGATION MENU\\r\\n  ----------------------------------------------------- */\\r\\n  #content .navbar {\\r\\n    display: inline-flex;\\r\\n    background:#fff;  \\r\\n    width: 100%;\\r\\n    padding: 10px 0;\\r\\n    z-index:1;\\r\\n    position: fixed;\\r\\n    border:none;\\r\\n    border-bottom: 2px solid #00b0ff;\\r\\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);\\r\\n    overflow: hidden;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n  #content .navbar .menu{\\r\\n  display: inline-flex;\\r\\n  align-self: center;\\r\\n  list-style: none;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n  #content .navbar .menu .navbar-items{\\r\\n  font-family: 'Source Sans Pro', sans-serif;\\r\\n  text-align: center;\\r\\n  padding: 2vh 1.5vw;\\r\\n  border-radius: 5%;\\r\\n  background: white;\\r\\n  font-weight:600;\\r\\n}\\r\\n  #content .navbar .menu .navbar-items:hover{\\r\\n  background: #00b0ff;\\r\\n}\\r\\n  #content .navbar .search-box{\\r\\n  display: flex;\\r\\n  padding: 1vh 1vw 1vh 1vw;\\r\\n  position: absolute;\\r\\n  align-self: center;\\r\\n  right: 10%;\\r\\n  width: 20%;\\r\\n  border:none;\\r\\n  border-bottom: 1px solid #757575;\\r\\n}\\r\\n  #content .navbar .home{\\r\\n  padding:  0 1vw;\\r\\n}\\r\\n  #content .navbar .home img{\\r\\n  align-self: baseline;\\r\\n  height: 45px;\\r\\n  width: 60px;\\r\\n}\\r\\n  /* ---------------------------------------------------\\r\\n    MEDIAQUERIES\\r\\n----------------------------------------------------- */\\r\\n  @media (max-width: 768px) {\\r\\n\\r\\n    #content .navbar .menu .hide-items {\\r\\n      display: none;\\r\\n      }\\r\\n    #content .navbar .search-box{\\r\\n      width: 50%;\\r\\n    }\\r\\n    }\\r\\n\"","module.exports = \"<div *ngIf=\\\"appService.getNavbarState()\\\" id=\\\"content\\\">\\r\\n    <nav class=\\\"navbar top-nav navbar-static-top\\\">\\r\\n        <ul class=\\\"menu\\\">\\r\\n            <li>\\r\\n                <div class=\\\"home\\\" [routerLink]=\\\"['/']\\\">\\r\\n                    <img src=\\\"assets/menu/home.png\\\" alt=\\\"Home-Navigation\\\">\\r\\n                </div>\\r\\n            </li>\\r\\n            <li *ngFor=\\\"let region of regions\\\">\\r\\n                <div class=\\\"navbar-items hide-items\\\" [routerLink]=\\\"['/region',region.regionName,'countries']\\\">\\r\\n                    {{region.regionName | uppercase}}\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <input type=\\\"text\\\" class=\\\"search-box\\\" placeholder=\\\"Search (not implemented)\\\" >\\r\\n    </nav>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { region } from './regions/region';\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  public regions:region;\n\n  constructor(private appService:AppService) { }\n\n  ngOnInit() {\n    this.regions=this.appService.getRegions();\n  }\n  public getCountries=(name)=>{\n    this.appService.getCountriesFromRegion(name);\n  }\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppService } from './app.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AllRegionsComponent } from './regions/allregions/allregions.component';\nimport { RegionsModule } from './regions/regions.module';\nimport { CountriesModule } from './countries/countries.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AllRegionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RegionsModule,\n    CountriesModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    NgbModule.forRoot(),\n    RouterModule.forRoot([\n      {path:'regions',component:AllRegionsComponent},\n      {path:'',redirectTo:'regions',pathMatch:'full'},\n      {path:'*',component:AllRegionsComponent},\n      {path:'**',component:AllRegionsComponent},\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  private url=\"https://restcountries.eu\";\n  public navbarOpen:boolean=true;\n\n  constructor(private http:HttpClient) { }\n\n  public getCountriesFromRegion(name):Observable<any>{\n     return this.http.get(`${this.url}/rest/v2/region/${name}`);\n  }\n  public getCountriesFromCurrency(code):Observable<any>{\n    return this.http.get(`${this.url}/rest/v2/currency/${code}`);\n  }\n  public getCountriesFromLanguage(code):Observable<any>{\n    return this.http.get(`${this.url}/rest/v2/lang/${code}`);\n  }\n\n  public setCountryInLocalStorage=(country)=>{\n    localStorage.setItem(country.name,JSON.stringify(country));\n  }\n  public getCountryFromLocalStroage=(name)=>{\n    return JSON.parse(localStorage.getItem(name));\n  }\n  public clearLocalStorage(){\n    localStorage.clear();\n  }\n\n  public getRegions():any{\n    return [\n      {regionName:'asia',regionImageUrl:'assets/regions/Asia.png',shortInfo:'Spanning the eastern, southern and notheren hemispheres, it covers an area of 44,579,000 sq. km (17,212,000 sq mi) and has a population of 446.27 crores.'},\n      {regionName:'americas',regionImageUrl:'assets/regions/America.png',shortInfo:'Spanning the western, southern and notheren hemispheres, it covers an area of 42,549,000 sq. km (16,428,000 sq mi) and has a population of 32.57 crores.'},\n      {regionName:'africa',regionImageUrl:'assets/regions/Africa.png',shortInfo:'Spanning the eastern, southern and notheren hemispheres, it covers an area of 30,370,000 sq. km (11,730,000 sq mi) and has a population of 121.61 crores.'},\n      {regionName:'europe',regionImageUrl:'assets/regions/Europe.png',shortInfo:'Spanning the eastern and notheren hemispheres, it covers an area of 10,180,000 sq. km (3,930,000 sq mi) and has a population of 74.14 crores.'},\n      {regionName:'oceania',regionImageUrl:'assets/regions/Oceania.png',shortInfo:'Spanning the eastern and western hemispheres, it covers an area of 8,525,989 sq. km (3,291,903 sq mi) and has a population of 38.82 million.'}\n    ];\n  }\n\n  public getNavbarState():boolean{\n    return this.navbarOpen;\n  }\n  public setNavbarState(state:boolean){\n    this.navbarOpen=state;\n  }\n}\n","module.exports = \" /* ---------------------------------------------------\\r\\n      CARDS\\r\\n  ----------------------------------------------------- */\\r\\n.container{\\r\\n    margin-top:5vh;\\r\\n}\\r\\n.mat-card-image{\\r\\n    height: 20vh;\\r\\n    width: 100%;\\r\\n}\\r\\n.mat-card-header{\\r\\n    display: inline-flex;\\r\\n    text-align: center;\\r\\n}\\r\\n.mat-card-title{\\r\\n    font-weight: 600;\\r\\n}\\r\\n.crop{\\r\\n    font-weight: 600;\\r\\n    width: 16vw;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n.col-md-4{\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"container\\\" style=\\\"text-align: center\\\">\\n\\n    <div class=\\\"row\\\" style=\\\"text-align: center\\\">\\n        <div *ngIf=\\\"regionName\\\" class=\\\"col-md-12\\\" style=\\\"font-size: 24px; color:#00b0ff;font-weight: 800\\\">All Countries in {{regionName | uppercase}}</div>\\n    </div>\\n    <br>\\n    <div class=\\\"row\\\" >\\n      <div *ngFor=\\\"let country of countries\\\" class=\\\"col-md-4\\\" >\\n      <mat-card>\\n        <mat-card-header >\\n          <mat-card-title><div class=\\\"crop\\\">{{country.name|uppercase}}</div><br> ({{country.timezones[0]}})</mat-card-title>\\n          <mat-card-subtitle>Sub Region: {{country.subregion}}</mat-card-subtitle>\\n        </mat-card-header>\\n\\n        <img mat-card-image src=\\\"{{country.flag}}\\\"/>\\n        \\n        <mat-card-actions layout=\\\"row\\\" layout-align=\\\"end center\\\">\\n          <button mat-button (click)=\\\"navigateToCountryView(country)\\\"  class=\\\"btn-primary\\\">Get More Details</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n   </div>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppService } from '../../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { country } from '../interfaces/country';\n\n@Component({\n  selector: 'app-all-countries',\n  templateUrl: './all-countries.component.html',\n  styleUrls: ['./all-countries.component.css']\n})\nexport class AllCountriesComponent implements OnInit {\n  private regionName:string;\n  private currencyCode:string;\n  private langCode:string; \n  public countries:country[];\n  constructor(private router:Router, private route:ActivatedRoute,private appService:AppService,private toastr:ToastrService){ \n    route.params.subscribe(val=>{\n      if(this.regionName=this.route.snapshot.paramMap.get('regionName')){\n        this.loadCountriesFromRegion();\n      }\n      else if(this.currencyCode=this.route.snapshot.paramMap.get('currencyCode')){\n        this.loadCountriesFromCurrency();\n      }\n      else if(this.langCode=this.route.snapshot.paramMap.get('langCode')){\n        this.loadCountriesFromLanguage();\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n  public loadCountriesFromRegion=()=>{\n    this.appService.getCountriesFromRegion(this.regionName).subscribe(data=>{\n      this.countries=data;\n    },error=>{\n      console.log('error occurred');\n    })\n  }\n  public loadCountriesFromCurrency=()=>{\n    this.appService.getCountriesFromCurrency(this.currencyCode).subscribe(data=>{\n      this.countries=data;\n      this.toastr.success(\"Currency filter applied in all regions.\");\n    },error=>{\n      console.log('error occurred');\n    })\n  }\n  public loadCountriesFromLanguage=()=>{\n    this.appService.getCountriesFromLanguage(this.langCode).subscribe(data=>{\n      this.countries=data;\n      this.toastr.success(\"Language filter applied in all regions.\");\n    },error=>{\n      console.log('error occurred');\n    })\n  }\n  public navigateToCountryView=(data)=>{\n    this.appService.clearLocalStorage();\n    this.appService.setCountryInLocalStorage(data);\n    this.appService.setNavbarState(false);\n    this.router.navigate(['/country',data.name]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule,Routes } from '@angular/router';\nimport { AppService } from '../app.service';\nimport { AllCountriesComponent } from './all-countries/all-countries.component';\nimport {MatCardModule, MatButtonModule} from '@angular/material';\nimport { CountryComponent } from './country/country.component';\nimport { ScrollToModule } from '@nicky-lenaers/ngx-scroll-to';\nimport { ScrollbarModule } from 'ngx-scrollbar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    MatCardModule,\n    MatButtonModule,\n    ScrollToModule.forRoot(),\n    ScrollbarModule,\n    RouterModule.forChild([\n      {path:'region/:regionName/countries',component:AllCountriesComponent},\n      {path:'allregions/currency/:currencyCode',component:AllCountriesComponent},\n      {path:'allregions/language/:langCode',component:AllCountriesComponent},\n      {path:'country/:countryName',component:CountryComponent}\n    ])\n  ],\n  declarations: [AllCountriesComponent, CountryComponent],\n  providers:[AppService]\n})\nexport class CountriesModule { }\n","module.exports = \"@import \\\"https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700\\\";\\r\\n\\r\\n\\r\\nbody {\\r\\n    font-family: 'Poppins', sans-serif;\\r\\n    background: #fafafa;\\r\\n}\\r\\n\\r\\n\\r\\np {\\r\\n    font-family: 'Poppins', sans-serif;\\r\\n    font-size: 1.1em;\\r\\n    font-weight: 300;\\r\\n    line-height: 1.7em;\\r\\n    color: #999;\\r\\n}\\r\\n\\r\\n\\r\\na, a:hover, a:focus {\\r\\n    color: inherit;\\r\\n    text-decoration: none;\\r\\n    transition: all 0.3s;\\r\\n}\\r\\n\\r\\n\\r\\n.line {\\r\\n    width: 100%;\\r\\n    height: 1px;\\r\\n    border-bottom: 1px dashed #ddd;\\r\\n    margin: 40px 0;\\r\\n}\\r\\n\\r\\n\\r\\n/* ---------------------------------------------------\\r\\n    SIDEBAR STYLE\\r\\n----------------------------------------------------- */\\r\\n\\r\\n\\r\\n#sidebar {\\r\\n    width: 300px;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    height: 100vh;\\r\\n    z-index: 999;\\r\\n    color: rgb(247, 245, 245);\\r\\n    text-align: center;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n\\r\\n.navbar {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar.active {\\r\\n    margin-left: -300px;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar .sidebar-header {\\r\\n    padding: 15px;\\r\\n    text-align: center;\\r\\n    background: #00b0ff;\\r\\n    width: 100%;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar .sidebar-header .crop{\\r\\n    overflow-wrap: normal;\\r\\n    padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar ul.components {\\r\\n    padding: 10px 0;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar ul p {\\r\\n    color: #fff;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar ul li a {\\r\\n    padding: 10px;\\r\\n    font-size: 1.1em;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n\\r\\n#sidebar ul li a:hover{\\r\\n    color: #fff;\\r\\n    background:#00b0ff;\\r\\n}\\r\\n\\r\\n\\r\\n/* ---------------------------------------------------\\r\\n    CONTENT STYLE\\r\\n----------------------------------------------------- */\\r\\n\\r\\n\\r\\n#content {\\r\\n    width: calc(100% - 300px);\\r\\n    margin-top: 5vh;\\r\\n    padding: 40px;\\r\\n    min-height: 100vh;\\r\\n    transition: all 0.3s;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n\\r\\n#content.active {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n#flag_b img {\\r\\n    width: 35vw;\\r\\n    height: 25vh;\\r\\n}\\r\\n\\r\\n\\r\\n.link{\\r\\n    cursor: pointer;\\r\\n    color:#00b0ff;\\r\\n}\\r\\n\\r\\n\\r\\n/* ---------------------------------------------------\\r\\n    MEDIAQUERIES\\r\\n----------------------------------------------------- */\\r\\n\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n    #sidebar {\\r\\n        margin-left: -300px;\\r\\n    }\\r\\n    #sidebar.active {\\r\\n        margin-left: 0;\\r\\n    }\\r\\n    #content {\\r\\n        width: 100%;\\r\\n    }\\r\\n    #content.active {\\r\\n        width: calc(100% - 250px);\\r\\n    }\\r\\n    #sidebarCollapse span {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <!-- Sidebar Holder -->\\n \\n  <nav id=\\\"sidebar\\\"   >\\n      <ng-scrollbar>\\n    <ul class=\\\"list-unstyled components navbar navbar-dark bg-dark flex-column\\\">\\n            <div class=\\\"sidebar-header\\\">\\n              <h3 class=\\\"crop\\\" >{{country.name}}</h3>\\n              <h5>{{country.capital}}</h5>\\n            </div>\\n            \\n            <li class=\\\"nav-item\\\"><a class=\\\"active\\\" [ngx-scroll-to]=\\\"'#region_b'\\\">Region</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'#subregion_b'\\\">Sub Region</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'flag_b'\\\">Flag</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'nativename_b'\\\">Native Name</a> </li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'population_b'\\\">Population</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'languages_b'\\\">Languages</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'#timezones_b'\\\">Time Zones</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'#lonlat_b'\\\">Latitude & Longitude</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'currencies_b'\\\">Currencies</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'area'\\\">Area</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'numcode_b'\\\">Numeric Code</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'tld_b'\\\">Top Level Domains</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'borders_b'\\\">Borders</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'a2c_b'\\\">Alpha 2 Code</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'a3c_b'\\\">Alpha 3 Code</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'regionalblocs_b'\\\">Regional Blocks</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'callingcodes_b'\\\">Calling Codes</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'translations_b'\\\">Translations</a></li>\\n            <li class=\\\"nav-item\\\"><a [ngx-scroll-to]=\\\"'cioc_b'\\\">CIOC</a></li>\\n    </ul>\\n  </ng-scrollbar>\\n  </nav>\\n\\n  <!-- Page Content Holder -->\\n  <div id=\\\"content\\\">\\n\\n    <section id=\\\"region_b\\\" class=\\\"container-fluid\\\">\\n      <h2>Region</h2>\\n      <p>This Country falls under {{country.region}} region.</p>\\n      <div class=\\\"line\\\"></div>\\n    </section>\\n    \\n    <section id=\\\"subregion_b\\\">\\n        <h2>Sub Region</h2>\\n        <p>This Country falls under {{country.subregion}} sub-region.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"flag_b\\\">\\n        <h2>Flag</h2>\\n        <img src=\\\"{{country.flag}}\\\" />\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"nativename_b\\\">\\n        <h2>Native Name</h2>\\n        <p>This Country is called as {{country.nativeName}} natively.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n \\n    <section id=\\\"population_b\\\">\\n        <h2>Population</h2>\\n        <p>The Country has {{country.population}} residents.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"languages_b\\\">\\n        <h2>Languages</h2>\\n        <p>Languages spoken in this country: <br></p>\\n          <div *ngFor=\\\"let language of country.languages\\\"><p class=\\\"link\\\" [routerLink]=\\\"['/allregions/language',language.iso639_1]\\\" >\\n            Name : {{language.name}} <br>\\n            Native Name : {{language.nativeName}}.<br>\\n            The ISO639_1 code for this language : \\\"{{language.iso639_1}}\\\".<br>\\n            The ISO639_2 code for this language : \\\"{{language.iso639_2}}\\\".\\n          </p></div>\\n          <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"timezones_b\\\">\\n        <h2>Time Zones</h2>\\n        <p>Times zones of this country <br> {{country.timezones }}.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"lonlat_b\\\">\\n        <h2>Latitude and Longitude</h2>\\n        <p>{{country.latlng}}</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"currencies_b\\\">\\n        <h2>Currencies</h2>\\n        <p>The currencies used in this country <br></p>\\n          <div *ngFor=\\\"let currency of country.currencies\\\">\\n            <p  class=\\\"link\\\" [routerLink]=\\\"['/allregions/currency',currency.code]\\\">Name : {{currency.name}}<br>\\n            Symbol : {{currency.symbol}}<br>\\n            Code : {{currency.code}}<br></p>\\n          </div>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"area\\\">\\n        <h2>Area</h2>\\n        <p>{{country.area}}.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"numcode_b\\\">\\n        <h2>Numeric Code</h2>\\n        <p>The Numeric code of this country is {{country.numericCode}}.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"tld_b\\\">\\n        <h2>Top Level Domains</h2>\\n        <p>Top Level Domains of this country: \\\"{{country.topLevelDomain}}\\\".</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"borders_b\\\">\\n        <h2>Borders</h2>\\n        <p *ngIf=\\\"country.borders.length!=0\\\">The Borders around this country <br> {{country.borders}}.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"a2c_b\\\">\\n        <h2>Alpha 2 Code</h2>\\n        <p>The aplha 2 code of this country is \\\"{{country.alpha2Code}}\\\".</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"a3c_b\\\">\\n        <h2>Alpha 3 Code</h2>\\n        <p>The aplha 3 code of this country is \\\"{{country.alpha3Code}}\\\".</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"regionalblocs_b\\\">\\n        <h2>Regional Blocks</h2>\\n        <p>Regional blocks in this country</p>\\n        <div *ngFor =\\\"let bloc of country.regionalBlocs\\\"><p>\\n          Name : {{bloc.name}}<br>\\n          Acronym : {{bloc.acronym}}<br>\\n          Other Acronyms : {{bloc.otherAcronyms}}<br>\\n          Other Names are {{bloc.otherNames}}<br>\\n        </p></div>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"callingcodes_b\\\">\\n        <h2>Calling Codes</h2>\\n        <p>{{country.callingCodes}}.</p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"translations_b\\\">\\n        <h2>Translations</h2>\\n        <p>It's translation in <br>\\n          German : \\\"{{country.translations.de}}\\\"<br>\\n          Spanish : \\\"{{country.translations.es}}\\\"<br>\\n          French : \\\"{{country.translations.fr}}\\\"<br>\\n          Japanese : \\\"{{country.translations.ja}}\\\"<br>\\n          Italian : \\\"{{country.translations.it}}\\\"<br>\\n          Breton : \\\"{{country.translations.br}}\\\"<br>\\n          Portuguese : \\\"{{country.translations.pt}}\\\"<br>\\n          Dutch : \\\"{{country.translations.nl}}\\\"<br>\\n          Croatian : \\\"{{country.translations.hr}}\\\"<br>\\n          Farsi : \\\"{{country.translations.fa}}\\\"<br>\\n        </p>\\n        <div class=\\\"line\\\"></div>\\n    </section>\\n\\n    <section id=\\\"cioc_b\\\">\\n        <h2>CIOC</h2>\\n        <p>{{country.cioc}}.</p>\\n    </section>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { country } from '../interfaces/country';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\nexport class CountryComponent implements OnInit,OnDestroy {\n  public country:country;\n  \n  constructor(private router:Router,private route:ActivatedRoute,private appService:AppService) { }\n\n  ngOnInit() {\n    let name=this.route.snapshot.paramMap.get('countryName');\n    this.country=this.appService.getCountryFromLocalStroage(name);\n  }\n  ngOnDestroy(){\n    this.appService.setNavbarState(true);\n  }\n}\n","module.exports = \"img {\\r\\n    margin: auto;\\r\\n    height: 90vh;\\r\\n    width: 100vw;\\r\\n  }\\r\\n  \\r\\n  ngb-carousel {\\r\\n    height:  90vh;\\r\\n    background-color: white;\\r\\n  }\\r\\n  \\r\\n  .carousel-caption{\\r\\n    color:black;\\r\\n  }\"","module.exports = \"\\n<ngb-carousel >\\n    <ng-container *ngFor=\\\"let region of regions\\\">\\n    <ng-template ngbSlide >\\n      <img src=\\\"{{region.regionImageUrl}}\\\" alt=\\\"Regions\\\" [routerLink]=\\\"['/region',region.regionName,'countries']\\\">\\n      <div class=\\\"carousel-caption\\\">\\n        <h3 [routerLink]=\\\"['/region',region.regionName,'countries']\\\">{{region.regionName|uppercase}}</h3>\\n        <p>{{region.shortInfo}}</p>\\n      </div>\\n    </ng-template>\\n  </ng-container>\\n  </ngb-carousel>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { region } from '../region';\nimport { AppService } from '../../app.service';\n@Component({\n  selector: 'app-allregions',\n  templateUrl: './allregions.component.html',\n  styleUrls: ['./allregions.component.css'],\n  providers: [NgbCarouselConfig]\n})\nexport class AllRegionsComponent implements OnInit {\n  public regions:Array<region>;\n\n  constructor(config:NgbCarouselConfig,public router:Router,private appService:AppService) { \n    config.interval=5000;\n    config.wrap=true;\n    config.keyboard=true;\n  }\n  \n  ngOnInit() {\n    this.regions=this.appService.getRegions();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule\n  ],\n  declarations: []\n})\nexport class RegionsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}